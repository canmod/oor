% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validity_classes.R
\name{ValidityMessager}
\alias{ValidityMessager}
\title{Validity Messager}
\usage{
ValidityMessager(test_function, ...)
}
\arguments{
\item{test_function}{Object that is coercible to a \code{\link{function}},
typically a function that will return a length-1 \code{\link{logical}}
vector. Often this object will inherit from \code{\link{Test}},
which provides a way to compose object tests.}

\item{...}{Length-1 \code{\link{character}} vectors to display
if \code{test_function} does not return \code{TRUE}.}
}
\value{
Object of class \code{ValidityMessager} containing the following
methods.
\itemize{
\item \verb{$check(x)} -- Returns \code{TRUE} if \code{test_function(x)} evaluates to
\code{TRUE} and otherwise fails with an error message derived from \code{...}.
\item \verb{$assert(x)} -- If \code{test_function(x)} evaluates to \code{TRUE} then the
argument, \code{x}, is returned. If it does not return \code{TRUE} then an
error message derived from \code{...} is given.
\item \verb{$is_true(x)} -- Returns \code{TRUE} if \code{test_function(x)} evaluates
to \code{TRUE}, and otherwise returns \code{FALSE}.
}

description
}
\description{
Couple a test function with a failure message
}
\details{
\code{ValidityMessager} objects have an
}
\examples{
is_numeric = ValidityMessager(is.numeric, "not numeric")

try(is_numeric$check("1"))

HoldANumber = function(x) {
  self = Base()
  self$x =  is_numeric$assert(x)
  return_object(self, "HoldANumber")
}
try(HoldANumber("a")) ## error message
HoldANumber(1) ## success

}
