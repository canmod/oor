% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_classes.R
\name{Trait}
\alias{Trait}
\title{Trait Class}
\usage{
Trait()
}
\description{
Initialize an object with methods that are intended to be forwarded
to other classes.
}
\details{
\link[=inheritance]{Inherit} from \code{Trait} if you want to use
your class to forward public methods to other classes without direct
inheritance.
}
\examples{
Print = function(x) {
  self = Testable()
  self$.x = x
  return_object(self, "Print")
}
Printer = function() {
  self = Trait()
  self$print = function() print(self$.x)
  return_object(self, "Printer")
}
PrintString = function(x) {
  self = inherit_from(Print, list(Printer), x)
  self$valid = function() {
     if (!is.character(self$.x)) return("can only print character strings")
     if (length(self$.x) != 1L) return("can only print length-1 character vectors")
     return(TRUE)
  }
  return_object(self, "PrintString")
}
PrintNumber = function(x) {
  self = inherit_from(Print, list(Printer), x)
  self$valid = function() {
     if (!is.numeric(self$.x)) return("can only print character strings")
     return(TRUE)
  }
  return_object(self, "PrintNumber")
}
PrintString("something to print")$print()
PrintNumber(pi)$print()
try(PrintNumber("not a number")) ## error

}
